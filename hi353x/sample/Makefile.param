# Hisilicon Hi3516 sample Makefile.param

export HIWORK_PATH?=${HOME}/hi3531/hi353x
export SDK_ROOT=${HIWORK_PATH}

export ARCH=arm
export MPP_BUILD=n

# use HIARCH indicate chip, use libc to choose cross compiler.
export HIARCH?=hi3531
export LIBC?=glibc

# Whether support the debug information. HI_DEBUG or HI_RELEASE
export HIDBG?=HI_DEBUG

# Whether open -g 
#export HIGDB?=y
export HIGDB?=n

# FPGA board or not
export FPGA?=n

ifeq ($(HIARCH), )
$(error HIARCH not defined! Please check!)
endif

ifeq ($(LIBC), )
$(error LIBC not defined! Please check!)
endif

ifeq ($(HIARCH),hi3531)
	export ARCH_DIR?=hi3531
	export HICHIP?=0x35310100
endif

ifeq ($(HIARCH),hi3532)
	export HICHIP?=0x35320100
	export ARCH_DIR?=hi3531
endif

ifeq ($(HIARCH),hi3521)
	export HICHIP?=0x35210100
	export ARCH_DIR?=hi3521
endif

ifeq ($(HIARCH),hi3520A)
	export HICHIP?=0x3520A100
	export ARCH_DIR?=hi3521
endif

ifeq ($(HIARCH),hi3520D)
	export HICHIP?=0x3520D100
	export ARCH_DIR?=hi3520D
endif

ifeq ($(HIARCH),hi3518)
	export HICHIP?=0x35180100
	export ARCH_DIR?=hi3518
endif

# use C01 to indicate uclibc, C02 to  indicate glibc, C00 to indicate FPGA.
ifeq ($(LIBC),glibc)
	export CVER?=.C02
else
	export CVER?=.C01
endif

ifeq ($(FPGA),y)
	export CVER=.C00
	export HI_FPGA:=HI_FPGA
	export EXTDRV:=extdrv/$(HIARCH)_fpga
else
	export HI_FPGA:=HI_XXXX
	export EXTDRV:=extdrv/$(HIARCH)
endif

# Get the local SDK_ROOT path or RELEASE_ROOT path by PARAM_FILE.
# PARAM_FILE is configed at Makefile before include this file
export PARAM_FILE

# Allocated the linux position
# Define cross compiler
ifeq ($(LIBC),glibc)
	export CROSS_COMPILE?= arm-hisiv200-linux-gnueabi-
	export CROSS?= arm-hisiv200-linux-gnueabi-
else
	export CROSS_COMPILE?= arm-hisiv100nptl-linux-
	export CROSS?= arm-hisiv100nptl-linux-
endif

export CROSS=arm-hisiv200-linux-gnueabi-

export CC:=$(CROSS)gcc
export AR:=$(CROSS)ar

export MPP_CFLAGS:= -Wall -std=c99

ifeq ($(HIGDB), y)
	MPP_CFLAGS += -g
endif

# Define the object output directory
export REL_INC := $(REL_DIR)/include
export REL_LIB := $(REL_DIR)/lib
export REL_KO  := $(REL_DIR)/ko
export REL_DIR=${SDK_ROOT}
export REL_LIB=${REL_DIR}/lib

# Define the lib of audio codec
export AUDIO_PATH?=$(SDK_PATH)/mpp/component/audio/lib/$(CROSS)
export AUDIO_LIBA := $(REL_LIB)/libVoiceEngine.a \
		$(REL_LIB)/libaec.a	\
		$(REL_LIB)/libresampler.a \
		$(REL_LIB)/libanr.a

# Define the lib of jpeg codec
export JPEGD_PATH?=$(SDK_PATH)/mpp/component/jpegd
export JPEGD_LIBA:=$(REL_LIB)/libjpeg.a

#********************* Macro for version management***************************** 
VER_X ?= 1
VER_Y ?= 0
VER_Z ?= 0
VER_P ?= 0
MPP_CFLAGS += -DVER_X=$(VER_X) -DVER_Y=$(VER_Y) -DVER_Z=$(VER_Z) -DVER_P=$(VER_P)
#******************************************************************************* 

# include the config file of platform
-include $(SDK_PATH)/mpp/configs/config.mk
LDFLAGS?=-L${SDK_ROOT}/lib


ifeq ($(HIARCH),hi3531)
CHIP_TYPE=CHIP_TYPE_hi3531v100
endif
ifeq ($(HIARCH),hi3532)
CHIP_TYPE=CHIP_TYPE_hi3532v100
endif
ifeq ($(HIARCH),hi3521)
CHIP_TYPE=CHIP_TYPE_hi3521v100
endif

COMMON_DIR:=$(PWD)/../common

REL_INC=../../

INC_FLAGS:=  -I$(SDK_ROOT)/include -I$(COMMON_DIR) 


CFLAGS := -Wall -g $(INC_FLAGS) -D$(HIARCH) -DHICHIP=$(HICHIP) -DSENSOR_TYPE=$(SENSOR_TYPE) -D$(HIDBG) -D$(HI_FPGA) -D$(CHIP_TYPE) -lpthread -lm

ifeq ($(HIARCH),hi3531)
CFLAGS += -march=armv7-a -mcpu=cortex-a9 -mfloat-abi=softfp -mfpu=vfpv3-d16
CXXFlAGS +=-march=armv7-a -mcpu=cortex-a9 -mfloat-abi=softfp -mfpu=vfpv3-d16
endif

COMM_SRC := $(wildcard $(COMMON_DIR)/*.c)
COMM_OBJ := $(COMM_SRC:%.c=%.o)
